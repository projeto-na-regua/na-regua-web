name: Build, Deploy React App to Docker Hub and Server

on:
  push:
    branches:
      - main  # Aciona o workflow quando houver push na branch 'main'

jobs:
  docker:
    runs-on: ubuntu-latest  # Este é o runner do GitHub Actions para build

    steps:
      # Passo 1: Check-out do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Configurar o Docker Buildx (necessário para multi-plataforma e melhores otimizações)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Passo 3: Logar no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Passo 4: Construir a imagem Docker com o código do frontend
      - name: Build Docker image
        run: |
          cd frontend  # Corrigido para usar o separador correto de diretórios
          docker build -t melissaneves/naregua-web:latest .

      # Passo 5: Enviar a imagem para o Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          cd frontend  # Corrigido para usar o separador correto de diretórios
          docker push melissaneves/naregua-web:latest

  deploy:
    runs-on: self-hosted  # Usando runner self-hosted para o deploy
    needs: docker
    steps:
      # Passo 1: Fazer login no Docker Hub
      - name: Log in to Docker Hub on self-hosted runner
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Passo 2: Instalar o Docker Compose (caso não esteja instalado)
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

      # Passo 3: Puxar a imagem Docker mais recente do Docker Hub
      - name: Pull Docker image from Docker Hub
        run: |
          sudo docker pull melissaneves/naregua-web:latest

      # Passo 4: Parar e remover qualquer container em execução com o nome 'naregua-web' (se existir)
      - name: Stop and remove existing container
        run: |
          sudo docker ps -q --filter "name=naregua-web" | grep -q . && docker stop naregua-web && docker rm naregua-web || echo "No running container found"

      # Passo 5: Rodar o novo container usando Docker Compose
      - name: Deploy with Docker Compose
        run: |
          cd /path/to/your/docker-compose-folder  # Caminho onde está seu arquivo docker-compose.yml
          sudo docker-compose down  # Para e remove containers, redes, volumes definidos no compose
          sudo docker-compose up -d  # Inicia o novo container em segundo plano

      # Passo 6: Verificar se o container está rodando corretamente
      - name: Verify containers
        run: |
          sudo docker ps
